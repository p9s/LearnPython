* Python 相关知识点整理
** 语言基础
*** 特点
- 跨平台
- 解释型脚本语言 :: 内建高级数据结构
- 面向对象 :: 数据和逻辑分离
- 动态语言 :: 类型不固定,可随意转换, 使用前不需要声明
- 不用考虑内存问题
- 默认编码为 UTF-8
*** 运行程序
- 两种模式:
  + 脚本式编程 :: 源代码文件
  + 交互式编程 :: 输入 -> 执行 循环
- 运行脚本:
  + 显式调用: python *.py
  + IPython:  %run *.py
  + 可执行脚本:
    1. 首行添加: /usr/bin/env python
    2. 添加可执行权限: chmod +x *.py
    3. 运行: 当前目录: ./*.py 或者 添加到 PATH 之后: *.py
*** 变量
命名规则 :: 只能包含: 字母,数字,下划线
- 不能:
  + 以数字开头
  + 包含空格
  + 关键字
  + 函数名
- 建议:
  + 使用小写字母
  + 慎用:  小写字母: L 及 大写字母: O, 因为易于数字: 1 和 0 混
*** 变量赋值
- 赋值符号: =
- 增量赋值: +=
- 多重赋值: x = y = z = 1
- 多元赋值:
  + x, y = 1, 2 :: 等号两边均为: 元组, 通常元组需要使用小括号包围, *var 可用于收集多余的赋值
  + 建议增加小括号以增强可读性: (x, y, *var) = (1, 2, 3, 'a')
- 变量交换: (x,y) = (y,x)
*** 补充话题
- 注释:
  + 单行: #
  + 多行: ''' :: 三引号
- 编码:
  + 3.x :: 默认为 UTF-8
  + 2.x :: 默认为: ASCII
  + 强制指定编码: # -**- UTF-8 -**-
  + 转换: u'ABC'.encode( 'utf-8' )
- IO:
  + 输入 :: message = input('请输入需要的内容')
  + 输出 :: print( message )
** 标准数据类型
*** 标准数据类型
- Number:
  + int
  + float
  + bool
  + complex( 复数 )
- String
- Tuple
- List
- Dictionary
- Sets
- 空值 :: None
